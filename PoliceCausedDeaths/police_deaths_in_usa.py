# -*- coding: utf-8 -*-
"""Police Deaths In USA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pXg6n1b4_opMaaCqjrGgkE0YPvX1uHgC

# **Import  Statements**
"""

# %pip install --upgrade plotly

import pandas as pd
import numpy as np
import plotly.express as px
import seaborn as sns
import matplotlib.pyplot as plt

import plotly.graph_objects as go

pd.options.display.float_format = '{:,.2f}'.format

df = pd.read_csv("police_deaths_538.csv")
df

"""# **Data Information And Cleaning**"""

df.shape

list[df.columns]

df.duplicated().sum()

print(f'Any duplicates? {df.duplicated().values.any()}')

nan_df = df.isna()
print(nan_df)

print(df.columns.tolist())

df.columns = df.columns.str.strip()
df

df.dtypes

print(f'Any NaN values among the data? {df.isna().values.any()}')

df.isna().sum()

df

# Drop rows where year is less than 1974
df = df[df['year'] >= 1974]
df

df.shape

df.info()

"""# **Deaths By State**"""

df_states = df['state'].value_counts()

"""## **Number Of Deaths Per State**"""

v_bar = px.bar(
            x = df_states.index,
            y = df_states.values,
            color = df_states.values,
            color_continuous_scale='Aggrnyl',
            title='Number of Deaths per State')

v_bar.update_layout(xaxis_title='States',
                        coloraxis_showscale=False,
                        yaxis_title='Number of Deaths')
v_bar.show()

"""# **Number Of Deaths Due To Various Causes**"""

df_cause_short = df['cause_short'].value_counts()
df

v_bar = px.bar(
            x = df_cause_short.index,
            y = df_cause_short.values,
            color = df_cause_short.values,
            color_continuous_scale='Aggrnyl',
            title='Number of Deaths per Cause')

v_bar.update_layout(xaxis_title='Causes',
                        coloraxis_showscale=False,
                        yaxis_title='Number of Deaths')
v_bar.show()

"""# **Number Of Deaths Caused By Canines**"""

df_canine = df['canine'].value_counts()
df_canine

v_bar = px.bar(
            x = df_canine.index,
            y = df_canine.values,
            color = df_canine.values,
            color_continuous_scale='Aggrnyl',
            title='Number of Deaths due to canines')

v_bar.update_layout(xaxis_title='Canine ',
                        coloraxis_showscale=False,
                        yaxis_title='Number of Deaths')
v_bar.show()

df.info()

df['weekday'] = df['eow'].apply(lambda x: x.split(",")[0].split(":")[1])
df['weekday']

df

"""# **Plot Weekdays Vs. Number Of Deaths**"""

weekday_deaths = df['weekday'].value_counts()

v_bar = px.bar(
            x = weekday_deaths.index,
            y = weekday_deaths.values,
            color = weekday_deaths.values,
            color_continuous_scale='Aggrnyl',
            title='Number of Deaths vs. Weekdays')

v_bar.update_layout(xaxis_title='Weekdays',
                        coloraxis_showscale=False,
                        yaxis_title='Number of Deaths')
v_bar.show()

"""# Plot Months vs. Number Of **Deaths**"""

df['eow']

df['month'] = df['eow'].apply(lambda x:x.split(",")[1].split(" ")[-2])
df

month_deaths = df['month'].value_counts()

v_bar = px.bar(
            x = month_deaths.index,
            y = month_deaths.values,
            color = month_deaths.values,
            color_continuous_scale='Aggrnyl',
            title='Number of Deaths vs. Month')

v_bar.update_layout(xaxis_title='Month',
                        coloraxis_showscale=False,
                        yaxis_title='Number of Deaths')
v_bar.show()

"""# Year vs. Number Of **Deaths**"""

year_deaths = df['year'].value_counts()

v_bar = px.bar(
            x = year_deaths.index,
            y = year_deaths.values,
            color = year_deaths.values,
            color_continuous_scale='Aggrnyl',
            title='Number of Deaths vs. Year')

v_bar.update_layout(xaxis_title='Year',
                        coloraxis_showscale=False,
                        yaxis_title='Number of Deaths')
v_bar.show()